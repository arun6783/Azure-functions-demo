name: Build and deploy Node.js project to Azure Function App - az-products-orchestrator

on:
  push:
    branches:
      - main
    paths:
      - 'productorchestrator/**'
  workflow_dispatch:

defaults:
  run:
    working-directory: productorchestrator

env:
  AZURE_FUNCTIONAPP_PACKAGE_PATH: '.' # set this to the path to your web app project, defaults to the repository root
  NODE_VERSION: '16.x' # set this to the node version to use (supports 8.x, 10.x, 12.x)

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v2

      - name: Setup Node ${{ env.NODE_VERSION }} Environment
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: 'print contents '
        shell: bash
        run: |
          ls -lrt .

      - name: 'Resolve Project Dependencies Using Npm'
        shell: bash
        run: |
          pushd '.'
          npm install
          npm run build --if-present
          npm run test --if-present
          popd

      # - name: 'Az CLI login'
      #   uses: azure/login@v1
      #   with:
      #     client-id: ${{ secrets.AZURE_CLIENT_ID }}
      #     tenant-id: ${{ secrets.AZURE_TENANT_ID }}
      #     subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # - name: 'Run Azure CLI commands'
      #   run: |
      #     az account show
      #     az group list
      #     pwd

      - name: deploy function
        uses: Azure/functions-action@v1.4.6
        with:
          # Name of the Azure Function App
          app-name: 'products-orchestrator'
          slot-name: 'production'
          # Publish profile (*.publishsettings) file contents with web deploy secrets
          publish-profile: ${{secrets.PUBLISH_PROFILE}}
          # Remove unwanted files defined in .funcignore file (default: 'false'). When this is set to 'true', 'package' should point to the folder of host.json.
          respect-funcignore: true
          # Enable build action from Kudu when the package is deployed onto the function app. This will temporarily change the SCM_DO_BUILD_DURING_DEPLOYMENT setting for this deployment. To bypass this and use the existing settings from your function app, please set this to an empty string ''. To enable remote build for your project, please set this and 'enable-oryx-build' both to 'true'. By default, GitHub Action respects the packages resolved in GitHub workflow, disabling the redundant build action from Kudu endpoint. (default: 'false').
          scm-do-build-during-deployment: true
          # Use Oryx Build from Kudu when the package is deployed onto the function app. (Linux functions only). This will temporarily change the ENABLE_ORYX_BUILD setting from this deployment. To bypass this and use the existing settings from your function app, please set this to an empty string ''. To enable remote build for your project, please set this and 'scm-do-build-during-deployment' both to 'true'. By default, GitHub Action respects the packages resolved in GitHub workflow, disabling the redundant build action from Kudu endpoint. (default: 'false').
          # enable-oryx-build: # optional, default is false
